.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "PICARDMETRICS" "1" "July 2016" "picardmetrics-0.2.4" "picardmetrics manual"
.
.SH "NAME"
\fBpicardmetrics\fR \- Run Picard tools and collate multiple metrics files
.
.SH "SYNOPSIS"
\fBpicardmetrics\fR run [\-f \fIFILE\fR] [\-o \fIDIR\fR] [\-r] [\-k] <file\.bam>
.
.P
\fBpicardmetrics\fR collate \fIPREFIX\fR \fIDIR\fR
.
.P
\fBpicardmetrics\fR refFlat <file\.gtf[\.gz]>
.
.P
\fBpicardmetrics\fR rRNA <file\.gtf[\.gz]>
.
.P
.
.br
\fB# Example with provided data:\fR
.
.P
\fBpicardmetrics\fR run \-r \-o out data/project1/sample1/sample1\.bam
.
.P
\fBpicardmetrics\fR run \-r \-o out data/project1/sample2/sample2\.bam
.
.P
\fBpicardmetrics\fR collate out/project1 out
.
.SH "DESCRIPTION"
\fBPicardmetrics\fR is a Bash script that simplifies calling Picard tools and collates the different output files generated by Picard\. It also has functions for generating the two input files required by CollectRnaSeqMetrics\.
.
.P
In order, \fBpicardmetrics run\fR will do the following:
.
.IP "1." 4
Automatically create a sequence dictionary using your reference sequence\.
.
.IP "2." 4
Create a new temporary BAM file that you can keep with option \fB\-k\fR\.
.
.IP "3." 4
Reorder the header of the BAM file to match the reference\.
.
.IP "4." 4
Sort the reads in the BAM file by coordinate\.
.
.IP "5." 4
Mark duplicates in the BAM file and report duplicate metrics\.
.
.IP "6." 4
Run up to 8 additional Picard tools\.
.
.IP "" 0
.
.P
After running the tools, use \fBpicardmetrics collate\fR to merge all of the generated metrics from multiple BAM files into tab\-delimited files\. Additionally, all of these tab\-delimited files are consolidated into a single file with all metrics from all BAM files and all Picard tools\.
.
.P
These are the tools called by \fBpicardmetrics\fR:
.
.IP "\(bu" 4
CreateSequenceDictionary \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CreateSequenceDictionary\fR
.
.IP "\(bu" 4
ReorderSam \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#ReorderSam\fR
.
.IP "\(bu" 4
SortSam \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#SortSam\fR
.
.IP "\(bu" 4
MarkDuplicates \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#MarkDuplicates\fR
.
.IP "\(bu" 4
.
.IP "\(bu" 4
CollectAlignmentSummaryMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectAlignmentSummaryMetrics\fR
.
.IP "\(bu" 4
CollectBaseDistributionByCycle \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectBaseDistributionByCycle\fR
.
.IP "\(bu" 4
CollectInsertSizeMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectInsertSizeMetrics\fR
.
.IP "\(bu" 4
MeanQualityByCycle \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#MeanQualityByCycle\fR
.
.IP "\(bu" 4
QualityScoreDistribution \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#QualityScoreDistribution\fR
.
.IP "" 0

.
.IP "\(bu" 4
CollectRnaSeqMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectRnaSeqMetrics\fR
.
.IP "\(bu" 4
CollectGcBiasMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectGcBiasMetrics\fR
.
.IP "\(bu" 4
EstimateLibraryComplexity \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#EstimateLibraryComplexity\fR
.
.IP "" 0
.
.P
Read about the meaning of each metric: Picard metrics definitions \fIhttps://broadinstitute\.github\.io/picard/picard\-metric\-definitions\.html\fR\.
.
.SH "COMMANDS AND OPTIONS"
.
.SS "run"
\fBpicardmetrics\fR run [\-f \fIFILE\fR] [\-o \fIDIR\fR] [\-r] <file\.bam>
.
.IP "\(bu" 4
\fB\-f\fR \fIFILE\fR
.
.IP
The configuration file with specified variables\. In order of preference, \fBpicardmetrics\fR will use (1) the specified file, (2) a file named \fBpicardmetrics\.conf\fR in the current directory or (3) in the user\'s HOME directory\. If no file is found, an error will be thrown and the program will exit\.
.
.IP "\(bu" 4
\fB\-o\fR \fIDIR\fR
.
.IP
Write 21 output files in this directory\. By default, write to the current directory\. The output files include:
.
.IP
(with option \-k) 1 BAM file sorted by coordinate and with duplicates marked
.
.br
6 log files for the Picard tools
.
.br
4 PDF files with plots generated by Picard tools
.
.br
10 text files with metrics and histograms
.
.IP "\(bu" 4
\fB\-r\fR
.
.IP
The BAM file is from an RNA\-seq experiment\. By default, this is not true\. When this option is used, the CollectRnaSeqMetrics Picard tool is run\. This option requires the variables \fBREF_FLAT\fR and \fBRIBOSOMAL_INTERVALS\fR to be set\. You should specify them in the configuration file\.
.
.IP "\(bu" 4
\fB\-k\fR
.
.IP
Keep the output BAM file\. By default, delete it after metrics are created\.
.
.IP "" 0
.
.SS "collate"
\fBpicardmetrics\fR collate \fIPREFIX\fR \fIDIR\fR
.
.P
Collate output metrics files in \fIDIR\fR into one file with all metrics from all Picard tools and all BAM files:
.
.P
\fIPREFIX\fR\-all\-metrics\.tsv
.
.P
Also write 5 collated histogram files:
.
.P
\fIPREFIX\fR\-base\-distribution\-by\-cycle\-histogram\.tsv
.
.br
\fIPREFIX\fR\-gc\-bias\-histogram\.tsv
.
.br
\fIPREFIX\fR\-insert\-size\-histogram\.tsv
.
.br
\fIPREFIX\fR\-library\-complexity\-histogram\.tsv
.
.br
\fIPREFIX\fR\-quality\-histogram\.tsv
.
.SS "refFlat"
\fBpicardmetrics\fR refFlat <file\.gtf[\.gz]>
.
.P
Create <file\.refFlat> for the \fBREF_FLAT\fR argument of the CollectRnaSeqMetrics tool\. Run this command on your optionally gzipped GTF file, and the output file will be written to the same directory as the GTF file\.
.
.P
\fBpicardmetrics run\fR will automatically create the \.refFlat file for you if you define the \fBGTF\fR variable in the configuration file\.
.
.SS "rRNA"
\fBpicardmetrics\fR rRNA <file\.gtf[\.gz]>
.
.P
Create <file\.rRNA\.list> for the \fBRIBOSOMAL_INTERVALS\fR argument of the CollectRnaSeqMetrics tool\. Run this command on your optionally gzipped GTF file, and the output file will be written to the same directory as the GTF file\.
.
.P
\fBpicardmetrics run\fR will automatically create the \.rRNA\.list file for you if you define the \fBGTF\fR variable in the configuration file\.
.
.SH "CONFIGURATION FILE"
The \fBpicardmetrics\.conf\fR file must define the following variables:
.
.IP "\(bu" 4
\fBTEMP_DIR\fR
.
.IP
A directory where temporary files will be written\.
.
.IP
The sequence dictionary is taken from the BAM header and written to a \.list file in this directory\. This file is used as the header of the \fBRIBOSOMAL_INTERVALS\fR file passed to CollectRnaSeqMetrics\.
.
.IP
A copy of the input BAM file is written to the temporary directory\. Then ReorderSam, SortSam, and MarkDuplicates are run on this copy\. By default, it is deleted after \fBpicardmetrics\fR is done\. Use option \fB\-k\fR to move the sorted and deduplicated BAM file to the output folder \fB\-o\fR instead\.
.
.IP "\(bu" 4
\fBNICENESS\fR
.
.IP
A number between 0 and 20 specifying the niceness to use for all jobs\. Use a number greater than 0 to avoid interrupting interactive jobs such as vim or emacs\.
.
.IP "\(bu" 4
\fBPICARD_JAR\fR
.
.IP
The full path to a downloaded picard\.jar file\. Get the file here: https://broadinstitute\.github\.io/picard/index\.html
.
.IP "\(bu" 4
\fBPICARD\fR
.
.IP
Your preferred way to invoke Java to call Picard\. For example:
.
.IP
\fBPICARD="java \-Xms5g \-Xmx5g \-jar $PICARD_JAR"\fR
.
.IP "\(bu" 4
\fBREFERENCE_SEQUENCE\fR
.
.IP
The full path to the organism\'s genome sequence in FASTA format\. Required for: CollectMultipleMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectMultipleMetrics\fR, CollectRnaSeqMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectRnaSeqMetrics\fR, CollectGcBiasMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectGcBiasMetrics\fR\.
.
.IP "\(bu" 4
\fBGTF\fR
.
.IP
Ful path to a \.gtf or \.gtf\.gz file with gene annotations\. \fBpicardmetrics\fR will use this to automatically create a \.refFlat file and \.rRNA\.list file\.
.
.IP "\(bu" 4
\fBREF_FLAT\fR (overrides \fBGTF\fR)
.
.IP
Full path to a text file with annotations of all gene features in UCSC format\. Can be generated from a GFF or GTF file\. Required for: CollectRnaSeqMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectRnaSeqMetrics\fR\.
.
.IP "\(bu" 4
\fBRIBOSOMAL_INTERVALS\fR (overrides \fBGTF\fR)
.
.IP
Full path to a text file with genomic coordinates of all ribosomal RNA genes in Picard format\. Required for CollectRnaSeqMetrics \fIhttps://broadinstitute\.github\.io/picard/command\-line\-overview\.html#CollectRnaSeqMetrics\fR\.
.
.IP "" 0
.
.SH "EXAMPLES"
Here are three examples of how you can run the program:
.
.IP "1." 4
Run \fBpicardmetrics\fR sequentially in a for loop on multiple BAM files\.
.
.IP "2." 4
Run in parallel with GNU parallel \fIhttps://www\.gnu\.org/software/parallel/parallel_tutorial\.html\fR, using multiple processors or multiple servers\.
.
.IP "3." 4
Run in parallel with an LSF \fIhttp://www\.vub\.ac\.be/BFUCC/LSF/\fR queue, distributing jobs to multiple servers\.
.
.IP "" 0
.
.SS "Example 1: Sequential"
Run \fBpicardmetrics\fR on the provided example BAM files:
.
.IP "" 4
.
.nf

for f in data/project1/sample?/sample?\.bam; do
  picardmetrics run \-r \-o out $f
done
.
.fi
.
.IP "" 0
.
.P
Collate the generated metrics files:
.
.IP "" 4
.
.nf

picardmetrics collate out/project1 out
.
.fi
.
.IP "" 0
.
.P
Next, use the file \fBout/project1\-all\-metrics\.tsv\fR to explore the metrics\.
.
.SS "Example 2: GNU parallel"
Run 2 jobs in parallel:
.
.IP "" 4
.
.nf

parallel \-j2 \e
  picardmetrics run \-o /path/to/out \-r {} ::: data/project1/sample?/sample?\.bam
.
.fi
.
.IP "" 0
.
.P
If you have many files, or if you want to run jobs on multiple servers, it\'s a good idea to put the full paths in a text file\.
.
.P
Here, we have ssh access to \fBserver1\fR and \fBserver2\fR\. We\'re launching 16 jobs on \fBserver1\fR and 8 jobs on \fBserver2\fR\. You\'ll have to make sure that \fBpicardmetrics\fR is in your \fBPATH\fR on all servers\.
.
.IP "" 4
.
.nf

ls /full/path/to/data/project1/sample*/sample*\.bam > bams\.txt
parallel \-S 16/server1,8/server2 \e
  picardmetrics run \-r \-o /path/to/out {} :::: bams\.txt
.
.fi
.
.IP "" 0
.
.SS "Example 3: LSF"
I recommend you install and use \fBasub\fR (see below) to submit jobs easily\. This command will submit a job for each BAM file to the \fBmyqueue\fR LSF queue\.
.
.IP "" 4
.
.nf

cat bams\.txt | xargs \-i echo picardmetrics run \-r \-o /path/to/out {} \e
  | asub \-j picardmetrics_jobs \-q myqueue
.
.fi
.
.IP "" 0
.
.SH "SOURCE CODE"
Find the source code here:
.
.br
\fIhttps://github\.com/slowkow/picardmetrics\fR
.
.SH "BUGS"
Please report issues here:
.
.br
\fIhttps://github\.com/slowkow/picardmetrics/issues\fR
.
.SH "AUTHOR"
Kamil Slowikowski from Harvard University wrote picardmetrics\. Many developers at the Broad Institute wrote Picard\. Heng Li from the Sanger Institute wrote samtools\. Aaron Quinlan from the University of Utah wrote stats\.
.
.SH "SEE ALSO"
Picard \fIhttps://broadinstitute\.github\.io/picard\fR
.
.br
samtools \fIhttps://github\.com/samtools/samtools\fR
.
.br
stats \fIhttps://github\.com/arq5x/filo\fR
.
.br
GNU parallel \fIhttps://www\.gnu\.org/software/parallel/parallel_tutorial\.html\fR
.
.br
LSF \fIhttp://www\.vub\.ac\.be/BFUCC/LSF/\fR
.
.br
asub \fIhttps://github\.com/lh3/asub\fR
